@use '@oslokommune/punkt-css/dist/scss/abstracts/mixins/typography' as *;
@use 'range-slider' as *;

/*
  Some Punkt elements, e.g. inputs, check- and radio-buttons, are still marked
  work in progress (as per v5.0.8). The following is an attempt to match the
  design in Figma until these are fully implemented in CSS and as components.
*/

.pkt-form {
  line-height: 1.5rem;

  .pkt-hr {
    margin-top: 0;
  }
}

.pkt-form-group {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;

  &--row {
    flex-direction: row;
  }

  &--error {
    .pkt-form-input,
    .pkt-form-textarea {
      border-color: var(--color-red);
    }
    .v-select {
      --vs-border-color: var(--color-red);
    }
  }
}

.pkt-form-label {
  display: flex;
  gap: 0.5rem;
  align-items: center;
  font-weight: 500;

  .pkt-badge {
    // Align badges, used to indicate optional form fields, with Figma design.
    @include get-text('pkt-txt-14-light');
    height: auto;
    padding: 0.125rem 0.5rem;
  }
}

.pkt-form-help {
  margin: 0;
  line-height: 1.375rem; // 22px
}

.pkt-form-input,
.pkt-form-textarea {
  &.flatpickr-input:not(:disabled)[readonly] {
    // Reset `readonly` state style for flatpickr inputs.
    color: var(--color-blue-dark);
    background-color: var(--color-white);
    border-color: var(--color-blue-dark);

    &:focus {
      color: var(--color-active);
      border-color: var(--color-active);
    }
  }
}

.pkt-form-check-input {
  flex-shrink: 0;
  width: 1.5rem;
  height: 1.5rem;

  &:hover + .pkt-form-label {
    color: var(--color-active);
  }

  + .pkt-form-label {
    flex-direction: column;
    gap: 0;
    align-items: flex-start;
    margin-top: 0.15rem;
    font-weight: 300;

    .description {
      display: block;
      margin-top: 0.5rem;
      font-weight: 300;
    }
  }

  &--tile {
    // TODO: Fully implemented the tiled check box and radio button.
    + .pkt-form-label {
      font-weight: 500;
    }
  }

  &[type='checkbox']:checked {
    background-color: var(--choice-checked-rb-bc);
  }
}

.form-input {
  &__wrapper {
    display: flex;
    align-items: stretch;
    justify-content: space-between;

    > .flatpickr-wrapper {
      display: block;
      width: 100%;
    }

    &--copiable {
      position: relative;

      .pkt-form-input,
      .pkt-form-textarea {
        padding-right: 3rem;
      }
    }
  }

  &__copy-button {
    position: absolute;
    top: 2px;
    right: 2px;
    height: 2.875rem;
  }
}

.form-errors {
  margin: 1.5rem 0;

  &__list {
    @include get-text('pkt-txt-14-light');
    list-style: square;

    > li {
      margin: 0 1.5rem;

      > span:first-child {
        @include get-text('pkt-txt-14-medium');
        margin-right: 0.5rem;
      }
    }
  }
}

.toggle {
  position: relative;
  display: inline-block;
  grid-area: 1 / 2 / 2 / 3;
  width: 5rem;
  transform: translateY(0.15rem);

  &__input {
    position: absolute;
    left: -999999px;
    width: 0;
    height: 0;
    background: none;

    &:focus ~ .toggle__switch {
      background: var(--color-primary) !important;
      outline: 4px solid var(--color-primary);
    }

    &:checked ~ .toggle__switch {
      background: var(--color-primary);

      &::before {
        left: 1.25rem;
        content: '✔';
      }

      &::after {
        content: 'På';
      }
    }
  }

  &__switch {
    position: relative;
    display: inline-block;
    width: 3rem;
    height: 2rem;
    background: var(--color-grayscale-30);
    border-radius: 1rem;
    box-shadow: inset 0 1px 4px rgba(var(--color-grayscale-80-rgb), 0.3);
    transition: all 0.3s ease-in-out;

    &::before {
      position: absolute;
      top: 0.25rem;
      left: 0.25rem;
      display: flex;
      align-items: center;
      justify-content: center;
      width: 1.5rem;
      height: 1.5rem;
      font-weight: 900;
      text-align: center;
      background: white;
      border-radius: 50%;
      transition: all 0.3s ease-in-out;
      content: '';
    }

    &::after {
      position: absolute;
      top: 0.5rem;
      right: -1.5rem;
      font-weight: 500;
      content: 'Av';
    }
  }

  &__wrapper {
    display: flex;
    align-content: baseline;
  }

  &__label {
    display: inline-block;
    grid-area: 1 / 1 / 2 / 2;
    margin-right: 1rem;
  }
}

.toggle-button {
  &__container {
    display: grid;
    grid-template-rows: 1fr;
    grid-template-columns: 1fr 5rem;
    align-items: center;
    margin-top: 1rem;
    margin-bottom: 1rem;
  }

  &--disabled {
    .toggle__input:checked ~ .toggle__switch {
      background: var(--color-grayscale-10);
    }

    .toggle__switch {
      background: var(--color-grayscale-10);
      cursor: not-allowed;

      &::before, &::after {
        color: var(--color-grayscale-30);
      }
    }
  }
}

.button-row {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  justify-content: flex-end;

  &--left {
    justify-content: flex-start;
  }
}
