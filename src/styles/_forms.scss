@use 'range-slider' as *;
@use 'typography';

/*
  Some Punkt elements, e.g. inputs, check- and radio-buttons, are still marked
  work in progress (as per v. 3.1.2). The following is an attempt to match the
  design in Figma until these are fully implemented in CSS and as components.
*/

.pkt-form {
  color: var(--color-blue-dark);
  line-height: 1.5rem;

  .pkt-hr {
    margin-top: 0;
  }
}

.pkt-form-group {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  color: var(--color-blue-dark);

  &--row {
    flex-direction: row;
  }

  &--error {
    .pkt-form-input,
    .pkt-form-textarea {
      border-color: var(--color-red);
    }
    .v-select {
      --vs-border-color: var(--color-red);
    }
  }
}

.pkt-form-label {
  display: flex;
  gap: 0.5rem;
  align-items: center;
  font-weight: 500;
  // According to Figma, `font-size` and `line-height` for labels should be
  // `1.125rem` and `1.5rem` respectively. This is for now scaled down somewhat
  // until the rest of the design is adjusted.
  font-size: typography.$font-size-2;
  line-height: 1.5rem;

  .pkt-badge {
    // Align badges, used to indicate optional form fields, with Figma design.
    height: auto;
    padding: 0.125rem 0.5rem;
    font-weight: 300;
    font-size: typography.$font-size-1;
    line-height: 1.375rem !important; // 22px
  }
}

.pkt-form-help {
  margin: 0 !important;
  font-weight: 300;
  line-height: 1.375rem !important; // 22px
}

.pkt-form-input,
.pkt-form-textarea {
  &:focus {
    outline: 4px solid var(--color-visited-light) !important;
  }

  &.flatpickr-input[readonly] {
    // Reset `readonly` state style for flatpickr inputs.
    color: var(--color-blue-dark);
    background-color: var(--color-white);
    border-color: var(--color-blue-dark);

    &:focus {
      color: var(--color-active);
    }
  }
}

.pkt-form-check-input {
  flex-shrink: 0;
  width: 1.5rem !important;
  height: 1.5rem !important;

  &:hover + .pkt-form-label {
    color: var(--color-active);
  }

  &:active {
    border-width: 4px;
    outline: 2px solid var(--color-active);
  }

  &:focus {
    outline: 4px solid var(--color-visited-light) !important;
  }

  + .pkt-form-label {
    flex-direction: column;
    gap: 0;
    align-items: flex-start;
    margin-top: 0.15rem;
    font-weight: 300;
    font-size: 1rem;
    line-height: 1.5rem;

    .description {
      display: block;
      margin-top: 0.5rem;
      font-weight: 300;
      font-size: typography.$font-size-2;
    }
  }


  &--tile {
    // TODO: Fully implemented the tiled check box and radio button.
    + .pkt-form-label {
      font-weight: 500;
    }
  }
}

.form-input__wrapper {
  display: flex;
  align-items: stretch;
  justify-content: space-between;

  > .flatpickr-wrapper {
    display: block;
    width: 100%;
  }
}

.form-errors {
  margin: 1.5rem 0 !important;

  &__list {
    font-size: typography.$font-size-1;
    list-style: square;

    > li {
      margin: 0 1.5rem;

      > span:first-child {
        margin-right: 0.5rem;
        font-weight: 500;
      }
    }
  }
}

.toggle {
  position: relative;
  display: inline-block;
  grid-area: 1 / 2 / 2 / 3;
  width: 5rem;
  transform: translateY(0.15rem);

  &__input {
    position: absolute;
    left: -999999px;
    width: 0;
    height: 0;
    background: none;

    &:focus ~ .toggle__switch {
      background: var(--color-primary) !important;
      outline: 4px solid var(--color-primary);
    }

    &:checked ~ .toggle__switch {
      background: var(--color-primary);

      &::before {
        left: 1.25rem;
        content: '\f00c';
      }

      &::after {
        content: 'PÃ¥';
      }
    }
  }

  &__switch {
    position: relative;
    display: inline-block;
    width: 3rem;
    height: 2rem;
    background: var(--color-grayscale-30);
    border-radius: 1rem;
    box-shadow: inset 0 1px 4px rgba(var(--color-grayscale-80-rgb), 0.3);
    transition: all 0.3s ease-in-out;

    &::before {
      position: absolute;
      top: 0.25rem;
      left: 0.25rem;
      display: flex;
      align-items: center;
      justify-content: center;
      width: 1.5rem;
      height: 1.5rem;
      font-weight: 900;

      font-family: 'Font Awesome 5 Free';
      text-align: center;
      background: white;
      border-radius: 50%;
      transition: all 0.3s ease-in-out;
      content: '';
    }

    &::after {
      position: absolute;
      top: 0.5rem;
      right: -1.5rem;
      font-weight: 500;
      content: 'Av';
    }
  }

  &__wrapper {
    display: flex;
    align-content: baseline;
  }

  &__label {
    display: inline-block;
    grid-area: 1 / 1 / 2 / 2;
    margin-right: 1rem;
  }
}

.toggle-button {
  &__container {
    display: grid;
    grid-template-rows: 1fr;
    grid-template-columns: 1fr 5rem;
    align-items: center;
    margin-top: 1rem;
    margin-bottom: 1rem;
    color: var(--color-text);
  }

  &--disabled {
    .toggle__input:checked ~ .toggle__switch {
      background: var(--color-grayscale-10);
    }

    .toggle__switch {
      background: var(--color-grayscale-10);
      cursor: not-allowed;

      &::before, &::after {
        color: var(--color-grayscale-30);
      }
    }
  }
}
